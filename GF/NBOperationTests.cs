using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using NUnit;
using NUnit.Framework;


namespace GF
{
    [TestFixture]
    class NBOperationTests
    {

        [Test]
        [TestCase("01000011110111001100100100000110000000011000011000100111011001000010010011010001011010000000110110101111110110111101101101011000010010011110111110001110000001100001010100011101001011111000000101111110101010111101111100001001010101000010100100011110111010110101111011010011010001000011010110011110111011111011000010001100111011101101110010001100100100110010111100010010011011101101111100010001010011101100100001010001000001010010110",
                  "10010010101001100100000110001111111001011001001100100011111100100001100100011000001011101101010010100010101111000000110000111110010110011101110000011101010110000010110111100101110110010001111010001111111000110000011101000011010011011111000010010110100101111111100010011100001000101100100000100001000011000011001000011001111110010001100010101001001111001100110010010001011011000101110111001001101100011010100101010001011001010010110",
                  "00101110111000101010001100111101100001000010100111100101000010001100010100010001101101000101100111110000011110000001000001000011100111111001101000111111000110100111110101111011101101101000011011110110100101000011000100101000011001110101011011101001001110110111101101111110110001000101000011110111010100101011101110111110110100000111111100010001100101100010011100000100101010011011001111101110100011001111001010111000000000100110001")]
        [TestCase("11000011101110001001010010100110111111010110000101010100101000110001010000110101100101101011100110000101011110111101001000100000011011101010000110000011010110001111010001010100011111111100000100110100011101011100001000000101000111010101110000011110000011110011010101101010001011111000111011010010101100000111101110111111101011000010000010111010110001000010011000110011111011010001001000101100100110101011010111100010101111110000011",
                  "10011011111110110011010001011101011100100001101011101011001001001111110111010101111011101101100110001011001001000110100101000111010101101010010110111101111100111100010100111000100011001110111100001000010011110111010110001010001101011110100110111110100010001111110101100010101001001110001101000010100111101011001110011011011111001010000010011111100100110001110011100011100000111000000000110000110010100101110011000000000011111000100",
                  "10111011010100000000010110001100100100101111010010010010000111110101010111001010000110100001011101010011001100001011101001110010010110000100011100100100110010001101110011100110010000010000111010100001011011101101100100011011101111010011111111111111010110010100111110010110111010110000100111110110100100011001101010100001011010111111010010011110101000111010010111001000010001000111101001000010101111011000000110101110111010000101111")]
        [TestCase("00111101001011110010010100111011110111100000000010010101101111100011110010000011011100100101101001111010111000000100110110101101000100011011001100101001001100010011001101000110011010101010100110011011110101101001111010000000000011000010111110110110110110101111010001001011110011110111110111011000011111001011100010000011001110001110110000001011011110101010101000101100010011111010011000001110011010010111100101011110011000011111101",
                  "10010100101101101010011000111101110111110010111011110000110011010010111111011000000011101100010011110100100100010100110011111101000000010111110001000011000010010110011111000010101110101101001011000111001101000111100100010011000111101100010101110101111001111110100001110010101110011111110101011110100111001010110000001001111101111111111000100001110101001010011100100100100000111011111011111010110010000100000000100010011101100110010",
                  "11010001001010011100111010111101001000000001100101011101010011110110111010101100101011111000001000001011111100011001010000101100000001010010000011011111001111100010100011000011111011101010101101110000100101001110111101110110111010010111011110101101111110011100110110111011000100010111000111111110011110011111000110110110000100011101110000000110000111000000000110110011100111001100011100001101000011111100111111111101100001001110000")]
        [TestCase("00100111100111100010100000101111101100010000011011010001110011110011101110111011010111011111011000010111011101001111100000101100011010000000101010011100101001010010011010000110001010000001101011100011100100110010001101000100000001100001100110110101101111110111011110101111000011000011010111000110111111101110000000001001110001101000111001011011000111011001110111010101100100001001011010111101101110101000011000010000011111010010110",
                  "10100000010111101010000001111101010110110001100000101111011001001111110000000101011110011000110010010001100001000111111001111101000011111100010110110110010000001010100111100010101101010010101100110111000000001001010010011010000110100000100000111110001110111100110011010000010011000011000000010100010110100111100000101110110010011110010001100010011101100000010010000101011001110111101110000101100011000111000000000001001101000001010",
                  "10001010101110100001000101101010100101010100011110110011111000001000110001001001111001100011011010001011101011011010000001000101001101001100101101101101100101001111000001000010110000000110110010001001111101111101000000111010010111011001000110000011001011011010010111001100000010000000010001010010011001101001100110001110010100100100110000000100000001100001011011111000110101101110001111100111111000000111001111101110010010000100110")]
        [TestCase("01001000001010110000011011101100010101100111110110101000110100010110001111100111110010111101111101100100001010010101101111010101000100101101101110101000111110110010001101000001001000001100010110011010110111100111000000001000110011111000110001110100100111000011000111001000111101011001011111101010011001100001110000100100100011100000111000111111000010010100001110101000101100000011000000111011001011010101111001011111000110010011001",
                  "01000000100111011000001000110100101011111100001101100100110000010101010101110001010100000100111111100100010011110111011011000110010110100011001011110001010110001111111111111001001111111000111100111110111001000110000100110100010111001111000011111100101000101001110001010011101011100010100111000010001110111110110001101111110000001000001010001100111001111110110010100100110110000010101101001011000110011010011101100010000010011111101",
                  "10100101011010010111101111000110110011110011100000110111100011001111001010110001100110100010001010100001100000000000011100010000001010101110001010010111111100010011101011100000010110100110001100111011100011000100111111100101101100111110010000001110111011100110000110011011001010111111110011100100011010010011110010111010110110111101000101011110100110011000110000000100101000000111010100001110011110001011111001110011110100110100110")]
        [TestCase("11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",
                  "10010010101001100100000110001111111001011001001100100011111100100001100100011000001011101101010010100010101111000000110000111110010110011101110000011101010110000010110111100101110110010001111010001111111000110000011101000011010011011111000010010110100101111111100010011100001000101100100000100001000011000011001000011001111110010001100010101001001111001100110010010001011011000101110111001001101100011010100101010001011001010010110",
                  "10010010101001100100000110001111111001011001001100100011111100100001100100011000001011101101010010100010101111000000110000111110010110011101110000011101010110000010110111100101110110010001111010001111111000110000011101000011010011011111000010010110100101111111100010011100001000101100100000100001000011000011001000011001111110010001100010101001001111001100110010010001011011000101110111001001101100011010100101010001011001010010110")]
        public void MulTest(string bin1, string bin2, string expectedResult)
        {
            NBNumber a = new NBNumber(bin1);
            NBNumber b = new NBNumber(bin2);
            var res = NBOperations.Mul(a, b);
            var actualResult = res.BitSTR();
            Assert.AreEqual(expectedResult, actualResult);
        }



        [Test]
        [TestCase("00010000000001100111110000110010000010111001101101101011010110110101101100110101111011111100010111101011001011100101110110010011001100101000100100101001001111011000000110001101101011110011011000101110011000001101100011110100110100101011100000111101000111111110111010110001000011000111010110001101001101011001101110110110110011000011010110111100101001001010010100110011010010101001110000101111110100110111110010001000110001011011010",
                  "00101010100010001011000110011101001110100000011101000000101110100110101111001101001110010000010011010100011010101111011101100101000000000110000010101110010000011011001100011001010111110001111101100111100101100110101110001110000111100011110100101110001101101110100100100110011000001000110000010011000011000011000111111001010111111100111101000011101010011111011110110111110100110011011100101011010010010010000110111110101110000101001",
                  "00011010110100100101111010011101001000011011100010001111011111101010001001110010110000110110010101000111100101010111110001100101110000001011110110100001010000110111101110000001110010001111011100111111001001010110111010000000110011001111011111111110011110010100010010100101101000111111110111111100011111001000000000011111111000100001000010000101001110110101000110000110101001011001110110101010100000110110010000010000010001000111100")]
        [TestCase("11011100010000101011001100011111001010000100000100100000000110110010110000111110011011010000001010000010011101110001011101110001000011110001100111100011111011010101110010110101010010101011110100100001001000000000001110100011000000100110001111010111110000111110010111100110010101011100110111110010011011101000001101001100011100111011011000111101111001111100111101110110011110000100011110000110001010100000011110010000001011101111010",
                  "11100101000110000010010101001000100001111011100111000101111001110110111010011011100101100100100000011111011100011011000111010011111011110100100111111110011101010111110110011111111010001111011010011011110111010001101000010000011100010111001111100110010100100001100110010011000011010011001011000011101011101111100100001110010000000001011111110010110110010111100100000111001000111101011000111000111010011011100110000101001011010000010",
                  "10010011111000110101010110100010001101111110011001111001011100011101000110001010000111010010000101111011111111010100000110011000011000110010000101000010011010100011010010100101111001100011001101111000010011001100100110010001010001011101111110001000001111100000111001011111000000010101111010101000100110101101001110010101000011000010011001100100001101011011100100100001100111001111001011010101011010010100010111111100000100110100010")]
        [TestCase("11100010001000111101100000001011000100111101000011100111011110110101001110000010000011010100111011000011111011001111100100111100011011000110000011100010010011001000001101100011011110001111111010100110111100000010100101110110010000110101110111101110101110110011110010000110001111000101000111000000100111010101000100000101111011011111011010101110100010000001110110001010110000110101001110001100101101110101101101110101111101101011101",
                  "11100100011001110011001110010100000110111001011110001111110101100100001100101011010110000010111010000010010000000011011010101110010000010100011010101101111100011000111010110111011101110101000010111110111101111100010001111110000100010001011101110010011010100001011000111000001011001011010111110110111101000101011010001101011000110100011101011011111110110110100010001010000111010011101000110010111011010000010010111100100100100111000",
                  "10011111100110011000001110011001111011001000011001010010011000000011000100101110111110111000001111100010010011100011100010111110010100011110101100001110111010100110010011011100001111110001111011001101011101110110001001100101010100110100110110110101101001010110101101001011101101111100111000111001100111010100011110010110110011000011110101000000100000101011100001000000100111011000011100000110011101110011111111110000100010010111111")]
        public void PowTest(string bin1, string bin2, string expectedResult)
        {
            NBNumber a = new NBNumber(bin1);
            NBNumber b = new NBNumber(bin2);
            var res = NBOperations.Pow(a, b);
            var actualResult = res.BitSTR();
            Assert.AreEqual(expectedResult, actualResult);
        }



        [Test]
        [TestCase("11010111010000010000011101110001100011000010101110100000000111100011100110011101000000100001000101011111000111101111000100011001110011011111001011001110100011111010010110010101100011011001101010001100110001000000001111111011110100100010011101000100110100010000101010000000001001011101101110000010111001011010001101001011101110010011001110100011110010101100101100010101000001100011000110110010011101000110000011001100110101011010000",
                  "01011111100000010010001100011001001100101111110100110010100001000000000000011000010111010000100000110011110001011001000111110010001000100000110110100011011011010110011010100010001100001111111100011010111100010111001011111101100101101000010001101000101110111100001111101010110000101000111100101110011111001101111010100111111000111110101010100111100001111000000100000101001010011110100001001101111100011101001011001000010110000011101")]
        [TestCase("11011010000101000101001101001100001111000111111110100101111100001000010000001100010100011000010100111111111000111101101110110001101110010011000011110101010011110100101010000100100011001011010010000101101100110000000011100010111100001010101110110001011000100111111101110111111100011011011101111001101000011101010100001100000010110100110011100000000001000101001100101101101110111100110010011101110011001111100010000110001100011000001",
                  "01011111100000011000100110000101100100111000101001011011110001111111101111010001010111100100100001011101110000101000111011010110010111000100010101111111101001110111110001010110100010010011100111101011111100110100011111100010101010010100010011110001011011010111000111011000101111111101000110100001101000000010001100101000110101100111011000101010110111111100100110101110001111000110101010110101101100001010000110001110010101010101100")]
        [TestCase("11011100010000101011001100011111001010000100000100100000000110110010110000111110011011010000001010000010011101110001011101110001000011110001100111100011111011010101110010110101010010101011110100100001001000000000001110100011000000100110001111010111110000111110010111100110010101011100110111110010011011101000001101001100011100111011011000111101111001111100111101110110011110000100011110000110001010100000011110010000001011101111010",
                  "11001001001011111110101010000101100100001001101111001010011011111010001001010101101011100111011000010011111011001110100110100110000110001111111011001010101110001001011000100000010001000000000111001000101010100001011100111001001100000101100101010110010010101001110010001011100000111110100100011011011111110000011001011000010011111001011000001100011100001101110101100101101101000100110000000001100100101010000001110110011011001001110")]
        public void ReverceTest(string bin, string expectedResult)
        {
            NBNumber a = new NBNumber(bin);
            var res = NBOperations.Reverce(a);
            var actualResult = res.BitSTR();
            Assert.AreEqual(expectedResult, actualResult);
        }
    }
}
